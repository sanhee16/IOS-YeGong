
# --------제목(Subject)--------
# <이모지><타입>: <제목> 의 형식으로 제목을 아래 공백줄에 작성
# 제목은 50자 이내 / 변경사항이 "무엇"인지 명확히 작성 / 끝에 마침표 금지 / 제목 첫 글자를 대문자로
# ex) ✨Feat : 로그인 기능 추가

# --------본문(Body)--------
# 본문(구체적인 내용)을 아랫줄에 작성
# 여러 줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 72자 이내)

# --------꼬릿말(Footer)--------
# 필수가 아닌 optioanl  
# Fixes        :이슈 수정중 (아직 해결되지 않은 경우)  
# Resolves     : 이슈 해결했을 때 사용  
# Ref          : 참고할 이슈가 있을 때 사용  
# Related to   : 해당 커밋에 관련된 이슈번호 (아직 해결되지 않은 경우)  
# ex) Fixes: #47 Related to: #32, #21  

# --------타입 리스트--------
# ✨Feat: 새로운 기능 추가
# 🐛Fix: 버그 수정 또는 typo
# ♻️Refactor: 리팩토링
# 💄Design:	UI 디자인 변경 및 Asset 수정/추가
# 💡Comment: 필요한 주석 추가 및 변경
# ☔️Test: 테스트(테스트 코드 추가, 수정, 삭제, 비즈니스 로직에 변경이 없는 경우)
# 🎉Init:	프로젝트 초기 생성
# 🚚Rename: 파일 혹은 폴더명 수정하거나 옮기는 경우
# 🔥Remove:	파일이나 코드 삭제
# 💎Release: 출시(버전)
# 🙈GitIgnore: git ignore 변경
# 📰 Add: 파일 추가


# 🎨	코드의 형식 / 구조를 개선 할 때
# 📰	새 파일을 만들 때
# 📝	사소한 코드 또는 언어를 변경할 때
# 🐎	성능을 향상시킬 때
# 📚	문서를 쓸 때
# 🐛	버그 reporting할 때, @FIXME 주석 태그 삽입
# 🚑	버그를 고칠 때
# 🐧	리눅스에서 무언가를 고칠 때
# 🍎	Mac OS에서 무언가를 고칠 때
# 🏁	Windows에서 무언가를 고칠 때
# 🔥	코드 또는 파일 제거할 때 , @CHANGED주석 태그와 함께
# 🙈    gitignore 추가
# 🚜	파일 구조를 변경할 때 . 🎨과 함께 사용
# ♻️	코드를 리팩토링 할 때
# ☔️	테스트를 추가 할 때
# 🔬	코드 범위를 추가 할 때
# 💚	CI 빌드를 고칠 때
# 🔒	보안을 다룰 때
# ⬆️	종속성을 업그레이드 할 때
# ⬇️	종속성을 다운 그레이드 할 때
# ⏩   이전 버전 / 지점에서 기능을 전달할 때
# ⏪	최신 버전 / 지점에서 기능을 백 포트 할 때
# 👕	linter / strict / deprecation 경고를 제거 할 때
# 💄	UI / style 개선시
# ♿️	접근성을 향상시킬 때
# 🚧	WIP (진행중인 작업)에 커밋, @REVIEW주석 태그와 함께 사용
# 💎	New Release
# 🔖	버전 태그
# 🎉	Initial Commit
# 🔈	로깅을 추가 할 때
# 🔇	로깅을 줄일 때
# ✨	새로운 기능을 소개 할 때
# ⚡️	도입 할 때 이전 버전과 호환되지 않는 특징, @CHANGED주석 태그 사용
# 💡	새로운 아이디어, @IDEA주석 태그
# 🚀	배포 / 개발 작업 과 관련된 모든 것
# 🐘	PostgreSQL 데이터베이스 별 (마이그레이션, 스크립트, 확장 등)
# 🐬	MySQL 데이터베이스 특정 (마이그레이션, 스크립트, 확장 등)
# 🍃	MongoDB 데이터베이스 특정 (마이그레이션, 스크립트, 확장 등)
# 🏦	일반 데이터베이스 별 (마이그레이션, 스크립트, 확장명 등)
# 🐳	도커 구성
# 🤝	파일을 병합 할 때

# 더보기: https://gitmoji.dev/
